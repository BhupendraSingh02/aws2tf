#!/bin/bash
if [ "$1" == "" ]; then
    echo "must specify sg exiting"
    exit
fi
if [ "$2" == "" ]; then
    echo "must specify subtype ingress or egress exiting"
    exit
fi

pref[0]="SecurityGroups"
tft[0]="aws_security_group_rule"
stype=`echo $2`
echo $stype
# cleanup tf aws_security_group_rule state - autogenerated
#
terraform state show aws_security_group.$1 > t2.txt
ttft="aws_security_group_rule"
cname=`echo $1`
cat t2.txt | perl -pe 's/\x1b.*?[mGKH]//g' > t1.txt
file="t1.txt"
ssg=0
grep source_security_group_id t1.txt
if [ $? -eq 0 ]; then
    ssg=1
fi
ir=1
fn=`printf "%s__%s__%s_%s.tf" $ttft $cname $stype $ir`
echo $ssg
echo "$fn $ttft $cname"
echo "# from aws_security_group_rule" > $fn

while IFS= read line
do
    skip=1
    # display $line or do something with $line
    t1=`echo "$line"` 
                    #echo $t1
    if [[ ${t1} == *"="* ]];then
        tt1=`echo "$line" | cut -f1 -d'=' | tr -d ' '` 
        tt2=`echo "$line" | cut -f2- -d'='`
         

                        #echo $tt1
                        if [[ ${tt1} == "$stype" ]];then   
                           
                            skip=0
                            lbc=0
                            rbc=0
                            breq=0
                            while [[ $breq -eq 0 ]];do 
                                if [[ "${t1}" == *"["* ]]; then lbc=`expr $lbc + 1`; fi 
                                if [[ "${t1}" == *"]"* ]]; then rbc=`expr $rbc + 1`; fi
                                #echo "$lbc $rbc $t1"
                                tt1=`echo "$line" | cut -f1 -d'=' | tr -d ' '` 
                                tt2=`echo "$line" | cut -f2- -d'=' | tr -d '"'`


                                if [[ ${tt1} == "{" ]];then 
                                    fn=`printf "%s__%s__%s_%s.tf" $ttft $cname $stype $ir`
                                    printf "resource \"%s\" \"%s_%s_%s\" {\n" $ttft $cname $stype $ir > $fn
                                    printf "type = \"%s\"\n" $stype >> $fn
                                    printf "security_group_id = aws_security_group.%s.id\n" $cname >> $fn
                                    skip=1;
                                fi
                                if [[ ${tt1} == *"}"* ]];then
                                    ir=`expr $ir + 1` 
                                    printf "}\n" >> $fn
                                    skip=1;
                                fi

                                if [[ ${tt1} == "security_groups" ]];then
                                    echo "t1 = $t1 $tt1 $tt2" 
                                    if [[ ${tt2} == *"[]"* ]];then
                                            skip=1  
                                        
                                    elif [[ ${tt2} == *"["* ]];then             
                                            read line 
                                            t1=`echo "$line"`
                                            if [[ "${t1}" == *"["* ]]; then lbc=`expr $lbc + 1`; fi  
                                            if [[ "${t1}" == *"]"* ]]; then rbc=`expr $rbc + 1`; fi  
                                            tt1=`echo "$line" | cut -f1 -d'=' | tr -d ' '` 
                                            tt2=`echo "$line" | cut -f2- -d'=' | tr -d '"'`  
                                            if [[ ${tt2} == *"sg-"* ]];then 
                                                tt2=`echo "$tt2" | tr -d ','`                
                                                t1=$(printf "source_security_group_id = aws_security_group.%s.id" $tt2)
                                                echo $t1 >> $fn
                                                skip=1
                                            fi
                                            read line
                                            t1=`echo "$line"`
                                            tt1=`echo "$line" | cut -f1 -d'=' | tr -d ' '` 
                                            tt2=`echo "$line" | cut -f2- -d'=' | tr -d '"'`
                                            if [[ "${t1}" == *"["* ]]; then lbc=`expr $lbc + 1`; fi  
                                            if [[ "${t1}" == *"]"* ]]; then rbc=`expr $rbc + 1`; fi
                                    fi
                                    if [[ ${tt2} == *"sg-"* ]];then
                                            t1=$(printf "source_security_group_id = aws_security_group.%s.id" $tt2)
                                            echo $t1 >> $fn
                                            skip=1
                                    fi
                                fi

                                
                                if [[ $rbc -eq $lbc ]]; then
                                    breq=1; 
                                    skip=1
                                fi

                                if [ "$skip" == "0" ]; then
                                    #echo $skip $t1
                                    #if [[ "$t1" == *"sg-"* ]]; then
                                    #    t1=`printf "aws_security_group.%s.id," $t1`
                                    #    t1=`echo $t1 | tr -d '"|,'`
                                    #fi 
                                    
                                    echo "$lbc $rbc $tt1 $tt2"
                                    if [[ "$tt2" != *"[]"* ]]; then
                                        echo $t1 >> $fn
                                    fi
                                fi
                                
                                read line
                                skip=0
                                t1=`echo "$line"`

                                
                            done 
                            
                            #echo $t1 >> $fn
                            
                        fi


                    else
                        if [[ "$t1" == *"sg-"* ]]; then
                            t1=`echo $t1 | tr -d '"|,'`
                            t1=`printf "aws_security_group.%s.id," $t1`
                        fi 

              

    fi                    
done <"$file"

#terraform fmt > /dev/null
#terraform validate
#rm -f t*.txt tf1.tmp

